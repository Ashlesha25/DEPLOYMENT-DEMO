# -*- coding: utf-8 -*-
"""RE pairwise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kXOCyEMtNN26t8TFZm_ynw48Z_d7x_Cy
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

Users=pd.read_csv("Users.csv")

Users.isnull().sum()

Books=pd.read_csv("Books.csv")

Users.shape





Ratings=pd.read_csv("Ratings.csv")

x = Ratings['User-ID'].value_counts() > 200
y = x[x].index #user_ids
Ratings = Ratings[Ratings['User-ID'].isin(y)]

ratings_books = Ratings.merge(Books, on='ISBN')
ratings_books.head()

ratings_books.isna().sum()

series = pd.isnull(ratings_books["Publisher"])
ratings_books[series]





ratings_books.isnull().sum()



ratings_books.shape

ratings_books_pivot = ratings_books.pivot_table(index='User-ID', columns='Book-Title',values='Book-Rating')

ratings_books_pivot.head()

ratings_books_pivot =ratings_books_pivot.fillna(0.0)
ratings_books_pivot

#Calculating Cosine Similarity between Users
from sklearn.metrics import pairwise_distances
from scipy.spatial.distance import cosine, correlation

ratenp= ratings_books_pivot.to_numpy()

user_sim = 1- pairwise_distances(ratenp, metric='cosine')





user_sim

#Store the results in a dataframe
user_sim_df = pd.DataFrame(user_sim)
user_sim_df.head()



ratings_books.rename(columns = {'User-ID':'UserID'}, inplace = True)

#Set the index and column names to user ids 
user_sim_df.index = ratings_books.UserID.unique()
user_sim_df.columns = ratings_books.UserID.unique()

user_sim_df.iloc[0:10, 0:10]

np.fill_diagonal(user_sim, 0)
user_sim_df.iloc[0:10, 0:10]

user_sim_df.idxmax(axis=1)[10:20]

def simuser(user_id):
  x= user_id
  users= user_sim_df[x].sort_values(ascending=False).head(5).index.values
  book = ratings_books.loc[ratings_books["UserID"].isin([users[0],users[1],users[2]])].sort_values("Book-Rating",ascending=False).head()
  recommend = print(book["Book-Title"].unique())
  return recommend

simuser(30533)

ratings_books[(ratings_books['UserID']==30533)].sort_values("Book-Rating", ascending= False)













